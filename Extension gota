// ==UserScript==
// @name         Mr LoKo1 YT Mods
// @namespace    https://www.youtube.com/channel/UCZ-bBLSepocrBubc2ERP5PQ
// @version      2.0
// @description  Linesplit up, down, left and right • Diagonal linesplit with just one key • Hotkeys to show/hide skins, names, mass, food, chat, minimap, score panel, party panel and leaderboard • Auto respawn in Team Scrimmage • Leave a scrimmage match before it ends • You can change the keys as you wish
// @match        *://gota.io/web*
// @author       Donut
// @grant        none
// @run-at       document-end
// @run-at       document-start
// @grant        GM_xmlhttpRequest
// @connect      gota.theoxt.com
// @grant        GM_setValue
// @grant        GM_getValue
// ==/UserScript==

var _0x1cc4=['\x70\u03b1\x72\u03b1\x6e\u03c3\x72\x6d\u03b1\x6c','\x38\x6a\x32\x7a\x54\x70\x63\x44\x4d\x42\x78\x57\x4e\x7a\x4d\x32\x38\x6a\x32\x7a\x54\x2f\x63\x44\x4d\x42\x4a\x57\x4e\x7a\x4d\x35\x38\x6a\x32\x7a\x55\x56\x63\x44\x4d\x42\x56\x57\x4e\x7a\x4d\x38\x38\x6a\x32\x7a\x56\x71','\x38\x6a\x32\x71\x55\x70\x63\x44\x4b\x6c\x4e\x57\x4e\x7a\x6b\x49\x38\x6a\x32\x71\x55\x2f\x63\x44\x4b\x6c\x5a\x57\x4e\x7a\x6b\x4c\x38\x6a\x32\x73\x50\x56\x63\x44\x4b\x6c\x2f\x57\x4e\x7a\x67\x61\x38\x6a\x32\x73\x51\x71','\x74\x61\x2e\x74\x68\x65\x6f\x78\x74\x2e','\x30\x7a\x78\x71\x56\x67\x39\x56\x30\x79\x6c\x71\x56\x77\x76\x59','\x39\x30\x36\x31\x37\x38\x45\x4d\x4b\x77\x4a\x56','\x69\x6e\x65\x72','\ud835\ude60\ud835\ude61\ud835\ude62\ud835\ude63\ud835\ude64\ud835\ude65\ud835\ude66\ud835\ude67\ud835\ude68\ud835\ude69','\x38\x6a\x32\x77\x48\x56\x63\x44\x4c\x4f\x46\x57\x4e\x7a\x41\x69\x38\x6a\x32\x77\x49\x46\x63\x44\x4c\x4f\x52\x57\x4e\x7a\x41\x6c\x38\x6a\x32\x77\x4a\x70\x63\x44\x4c\x4f\x33\x57\x4e\x7a\x41\x6f\x38\x6a\x32\x77\x4a\x57','\ud835\udcb4\ud835\udcb5','\x6e\x67\x2e\x2e\x2e\x3c\x2f\x68\x31\x3e','\x35\x79\x32\x63\x35\x6c\x4d\x64\x35\x79\x59\x41\x34\x7a\x45\x51\x35\x6c\x4d\x68\x35\x79\x32\x64\x34\x79\x36\x32\x35\x79\x32\x65\x35\x6c\x49\x4f\x37\x37\x36\x6d','\x6f\x6e\x6c\x6f\x61\x64','\x34\x50\x6f\x71\x34\x50\x6f\x72\x34\x50\x6f\x73\x34\x50\x6f\x74\x34\x50\x6f\x75\x34\x50\x6f\x76\x34\x50\x6f\x77\x34\x50\x6f\x78\x34\x50\x6f\x79\x34\x50\x6f\x7a','\x38\x6a\x32\x75\x55\x2f\x63\x44\x4c\x41\x64\x57\x4e\x7a\x77\x4d\x38\x6a\x32\x76\x4b\x2f\x63\x44\x4c\x7a\x33\x57\x4e\x7a\x77\x77','\x6f\x74\x47\x30\x6e\x64\x72\x53\x42\x32\x66\x4b\x41\x67\x43','\x38\x6a\x32\x79\x52\x70\x63\x44\x4d\x6b\x33\x57\x4e\x7a\x49\x55\x38\x6a\x32\x79\x52\x2f\x63\x44\x4d\x6c\x64\x57\x4e\x7a\x49\x58\x38\x6a\x32\x79\x53\x56\x63\x44\x4d\x6c\x70\x57\x4e\x7a\x49\x30\x38\x6a\x32\x79\x54\x71','\x38\x6a\x32\x75\x4e\x6f\x6b\x65\x51\x61','\u24ba\u24bb\u24bc\u24bd\u24be\u24bf\u24c0\u24c1\u24c2\u24c3','\x74\x61\x2e\x69\x6f\x2f\x77\x65\x62\x2f','\ud835\udc1a\ud835\udc1b\ud835\udc1c\ud835\udc1d\ud835\udc1e\ud835\udc1f\ud835\udc20\ud835\udc21\ud835\udc22\ud835\udc23','\ud835\udd70\ud835\udd71\ud835\udd72\ud835\udd73\ud835\udd74\ud835\udd75\ud835\udd76\ud835\udd77\ud835\udd78\ud835\udd79','\x73\x65\x6c\x65\x63\x74','\x38\x6a\x32\x76\x55\x56\x63\x44\x4c\x42\x56\x57\x4e\x7a\x77\x38\x38\x6a\x32\x76\x56\x46\x63\x44\x4c\x42\x37\x57\x4e\x7a\x77\x2f\x38\x6a\x32\x77\x47\x70\x63\x44\x4c\x4f\x68\x57\x4e\x7a\x41\x63\x38\x6a\x32\x77\x47\x57','\u24c4\u24c5\u24c6\u24c7\u24c8\u24c9\u24ca\u24cb\u24cc\u24cd','\x37\x37\x59\x56\x37\x37\x59\x57\x37\x37\x59\x58\x37\x37\x59\x59\x37\x37\x59\x5a\x37\x37\x59\x30\x37\x37\x59\x31\x37\x37\x59\x32\x37\x37\x59\x33\x37\x37\x59\x34','\u049c\u3125\u722a\u51e0\u3116\u5369\u024a\u5c3a\u4e02\u3112','\x7a\x4d\x4c\x34\x7a\x77\x71','\x34\x67\x59\x41\x50\x4e\x50','\u0454\x66\x67\u043d\u03b9\u05e0\u043a\u2113\u043c\u0438','\ud835\ude94\ud835\ude95\ud835\ude96\ud835\ude97\ud835\ude98\ud835\ude99\ud835\ude9a\ud835\ude9b\ud835\ude9c\ud835\ude9d','\ud83c\udd5a\ud83c\udd5b\ud83c\udd5c\ud83c\udd5d\ud83c\udd5e\ud83c\udd5f\ud83c\udd60\ud83c\udd61\ud83c\udd62\ud83c\udd63','\x41\x77\x35\x55\x7a\x78\x6a\x69\x76\x65\x31\x6d','\x38\x6a\x32\x76\x4b\x56\x63\x44\x4c\x7a\x70\x57\x4e\x7a\x77\x75\x38\x6a\x32\x76\x4c\x46\x63\x44\x4c\x7a\x42\x57\x4e\x7a\x77\x78\x38\x6a\x32\x76\x4d\x70\x63\x44\x4c\x7a\x4e\x57\x4e\x7a\x77\x41\x38\x6a\x32\x76\x4d\x57','\x32\x32\x35\x70\x78','\x44\x4d\x66\x53\x44\x77\x75','\uff41\uff42\uff43\uff44\uff45\uff46\uff47\uff48\uff49\uff4a','\x6f\x6e\x6b\x65\x79\x75\x70','\ud835\udce8\ud835\udce9','\x5a\x52\x68\x71\x53\x4d\x6e\x4b\x7a\x44\x6b\x74\x59\x41\x6c\x71\x56\x43\x36\x35\x41\x47','\x73\x74\x61\x72\x74\x73\x57\x69\x74\x68','\x42\x33\x62\x4c\x42\x47','\x38\x6a\x32\x71\x4d\x70\x63\x44\x4b\x6a\x4b','\x70\x63\x39\x4a\x7a\x77\x35\x30\x7a\x78\x69\x2b','\x73\x74\x79\x6c\x65','\x38\x6a\x32\x79\x56\x46\x63\x44\x4d\x41\x74\x57\x4e\x7a\x4d\x48\x38\x6a\x32\x7a\x4d\x73\x56\x57\x4e\x7a\x4d\x65\x38\x6a\x32\x7a\x51\x46\x63\x44\x4d\x7a\x42\x57\x4e\x7a\x4d\x48\x38\x6a\x32\x7a\x4e\x47','\x43\x2b\x67\x30\x4a\x45\x67\x30\x47\x6d\x51\x46\x59\x50\x38\x47\x34\x42\x73\x65\x34\x42\x73\x61\x34\x42\x73\x79\x43\x57','\x73\x65\x6c\x65\x63\x74\x65\x64\x49\x6e','\x38\x6a\x32\x74\x54\x70\x63\x44\x4b\x37\x78\x57\x4e\x7a\x6f\x32\x38\x6a\x32\x74\x54\x2f\x63\x44\x4b\x37\x4a\x57\x4e\x7a\x6f\x35\x38\x6a\x32\x74\x55\x56\x63\x44\x4b\x37\x56\x57\x4e\x7a\x6f\x38\x38\x6a\x32\x74\x56\x71','\x38\x6a\x32\x74\x47\x70\x63\x44\x4b\x34\x68\x57\x4e\x7a\x6f\x63\x38\x6a\x32\x74\x47\x2f\x63\x44\x4b\x7a\x5a\x57\x4e\x7a\x6f\x66\x38\x6a\x32\x74\x48\x56\x63\x44\x4b\x34\x46\x57\x4e\x7a\x6f\x69\x38\x6a\x32\x74\x49\x71','\x70\x61\x74\x68\x6e\x61\x6d\x65','\x38\x6a\x32\x77\x4d\x56\x63\x44\x4c\x50\x56\x57\x4e\x7a\x41\x43\x38\x6a\x32\x77\x4e\x46\x63\x44\x4c\x50\x37\x57\x4e\x7a\x41\x46\x38\x6a\x32\x76\x52\x70\x63\x44\x4c\x41\x33\x57\x4e\x7a\x77\x55\x38\x6a\x32\x76\x52\x57','\x6d\x74\x66\x30\x73\x33\x50\x36\x41\x77\x6d','\uff25\uff26\uff27\uff28\uff29\uff2a\uff2b\uff2c\uff2d\uff2e','\ud835\udc01\ud835\udc28\ud835\udc25\ud835\udc1d','\u15e9\u15f7\u1455\u15ea\x45\u15b4\x47\u157c\x49\u148d','\x76\x61\x6c\x75\x65','\x72\x65\x30\x37\x30\x33\x32\x31\x2e\x6a','\x38\x6a\x32\x7a\x51\x56\x63\x44\x4d\x41\x56\x57\x4e\x7a\x4d\x53\x38\x6a\x32\x7a\x52\x46\x63\x44\x4d\x41\x37\x57\x4e\x7a\x4d\x56\x38\x6a\x32\x79\x56\x70\x63\x44\x4d\x6c\x33\x57\x4e\x7a\x49\x2b\x38\x6a\x32\x79\x56\x57','\x75\x76\x77\u0445\u0447\x7a\u03b1\u0432\x63\x64','\x37\x37\x32\x6c\x37\x37\x32\x6d\x37\x37\x32\x6e\x37\x37\x32\x6f\x37\x37\x32\x70\x37\x37\x32\x71\x37\x37\x32\x72\x37\x37\x32\x73\x37\x37\x32\x74\x37\x37\x32\x75','\x6d\x74\x61\x34\x6e\x5a\x71\x57\x6d\x76\x76\x6b\x73\x68\x6e\x4f\x77\x61','\ud835\udd28\ud835\udd29\ud835\udd2a\ud835\udd2b\ud835\udd2c\ud835\udd2d\ud835\udd2e\ud835\udd2f\ud835\udd30\ud835\udd31','\x64\x65\x78','\x4b\u14aa\u15f0\u144e\x4f\u146d\u146b\u1587\u1515\x54','\x6b\x6c\x6d\x6e\u03c3\x70\x71\x72\x73\x74','\ud835\ude36\ud835\ude37\ud835\ude38\ud835\ude39\ud835\ude3a\ud835\ude3b\ud835\ude08\ud835\ude09\ud835\ude0a\ud835\ude0b','\x74\x65\x78\x74','\x63\x68\x61\x74\x2d\x63\x6f\x6e\x74\x61','\x63\x73\x73\x3f','\x62\x6f\x74\x74\x6f\x6d','\x34\x42\x73\x68\x30\x50\x70\x6a\x4f\x53\x51\x43\x59\x41\x52\x48\x54\x69\x52\x48\x54\x69\x56\x6b\x4e\x2b\x67\x30\x4a\x43\x4d\x30','\x34\x7a\x73\x76\x34\x7a\x67\x54\x72\x45\x67\x72\x4c\x75\x4e\x48\x4c\x36\x4e\x48\x4b\x51\x4f','\x63\x6f\x6d\x2f\x67\x6f\x74\x61\x2f\x77','\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e','\x5a\x34\x76\x32\x44\x39\x67\x66\x45\x78\x52\x6f\x53\x44\x63\x59\x79\x32\x71','\ud835\ude56\ud835\ude57\ud835\ude58\ud835\ude59\ud835\ude5a\ud835\ude5b\ud835\ude5c\ud835\ude5d\ud835\ude5e\ud835\ude5f','\x38\x6a\x32\x75\x49\x46\x63\x44\x4c\x6b\x2f\x57\x4e\x7a\x73\x45\x38\x6a\x32\x75\x51\x70\x63\x44\x4c\x6c\x68\x57\x4e\x7a\x73\x59\x38\x6a\x32\x75\x52\x57','\x30\x7a\x72\x4d\x7a\x32\x4a\x64\x52\x77\x50\x52\x42\x67\x31\x55','\x69\x5a\x66\x48\x6d\x77\x65\x58\x79\x71','\x72\x30\x76\x75','\x6e\x75\x6a\x30\x75\x32\x76\x35\x43\x61','\ud835\udd6d\ud835\udd94\ud835\udd91\ud835\udd89\x2b\ud835\udd71\ud835\udd97\ud835\udd86\ud835\udd90\ud835\udd99','\ud835\udd84\ud835\udd85','\x7a\x67\x76\x34','\x6e\x74\x6d\x5a\x6e\x4a\x7a\x73\x7a\x77\x50\x66\x71\x76\x79','\x38\x6a\x32\x71\x55\x2f\x63\x44\x4b\x52\x42\x57\x4e\x7a\x6f\x64\x38\x6a\x32\x73\x55\x71','\x22\x3e\x3c\x2f\x73\x63\x72\x69\x70\x74','\x38\x6a\x32\x75\x4e\x56\x63\x44\x4c\x6a\x2f\x57\x4e\x7a\x73\x47\x38\x6a\x32\x75\x4f\x46\x63\x44\x4c\x6b\x6c\x57\x4e\x7a\x73\x4a\x38\x6a\x32\x75\x50\x70\x63\x44\x4c\x6b\x78\x57\x4e\x7a\x73\x4d\x38\x6a\x32\x75\x50\x57','\x68\x72\x65\x66','\x5a\x34\x70\x70\x47\x78\x68\x72\x4a\x39\x67\x76\x30\x79\x6c\x70\x48\x43\x36\x39\x5a\x34\x4e\x70\x48\x57','\x37\x36\x36\x37\x34\x37\x45\x74\x75\x5a\x41\x64','\x38\x6a\x32\x75\x4b\x56\x63\x44\x4c\x6a\x70\x57\x4e\x7a\x73\x75\x34\x4f\x73\x43\x38\x6a\x32\x75\x4c\x56\x63\x44\x4c\x6a\x46\x57\x4e\x7a\x73\x79\x38\x6a\x32\x75\x4d\x46\x63\x44\x4c\x6a\x52\x57\x4e\x7a\x73\x42','\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74','\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a','\x34\x50\x6f\x41\x34\x50\x6f\x42\x34\x50\x6f\x43\x34\x50\x6f\x44\x34\x50\x6f\x45\x34\x50\x6f\x46\x34\x50\x6f\x47\x34\x50\x6f\x48\x34\x50\x6f\x49\x34\x50\x6f\x4a','\x42\x67\x76\x4d\x44\x61','\ud835\udd90\ud835\udd91\ud835\udd92\ud835\udd93\ud835\udd94\ud835\udd95\ud835\udd96\ud835\udd97\ud835\udd98\ud835\udd99','\x7a\x32\x76\x30\x72\x77\x58\x4c\x42\x77\x76\x55\x44\x61','\x38\x6a\x32\x71\x48\x70\x63\x44\x4b\x69\x78\x57\x4e\x7a\x63\x67\x38\x6a\x32\x71\x48\x2f\x63\x44\x4b\x69\x4a\x57\x4e\x7a\x63\x6a\x38\x6a\x32\x71\x49\x56\x63\x44\x4b\x69\x56\x57\x4e\x7a\x63\x6d\x38\x6a\x32\x71\x4a\x71','\x31\x51\x69\x4e\x4f\x57\x69','\x38\x6a\x32\x71\x52\x56\x63\x44\x4b\x6b\x2f\x57\x4e\x7a\x63\x57\x38\x6a\x32\x71\x53\x46\x63\x44\x4b\x6c\x6c\x57\x4e\x7a\x63\x5a\x38\x6a\x32\x71\x47\x70\x63\x44\x4b\x69\x68\x57\x4e\x7a\x63\x63\x38\x6a\x32\x71\x47\x57','\x75\x72\x6c','\x43\x4d\x76\x57\x42\x67\x66\x4a\x7a\x71','\x6e\x67\x44\x7a\x71\x76\x62\x6f\x75\x61','\u043a\u2113\u043c\u0438\u03c3\u03c1\x71\u044f\u0455\u0442','\x38\x6a\x32\x79\x4f\x70\x63\x44\x4d\x6b\x65','\x43\x33\x72\x56\x43\x61','\x74\x22\x20\x68\x72\x65\x66\x3d\x22','\ud835\udd08\ud835\udd09\ud835\udd0a\u210c\u2111\ud835\udd0d\ud835\udd0e\ud835\udd0f\ud835\udd10\ud835\udd11','\x38\x6a\x32\x76\x50\x56\x63\x44\x4c\x41\x46\x57\x4e\x7a\x77\x4f\x38\x6a\x32\x76\x51\x46\x63\x44\x4c\x41\x52\x57\x4e\x7a\x77\x52\x38\x6a\x32\x75\x55\x70\x63\x44\x4c\x6c\x4e\x49\x48\x69\x6c\x57\x4e\x7a\x73\x37','\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x6f','\x38\x6a\x2b\x66\x4e\x56\x63\x46\x48\x7a\x2f\x57\x4e\x34\x77\x47\x38\x6a\x2b\x66\x4f\x46\x63\x46\x48\x41\x6c\x57\x4e\x34\x77\x4a\x38\x6a\x2b\x66\x50\x70\x63\x46\x48\x41\x78\x57\x4e\x34\x77\x4d\x38\x6a\x2b\x66\x50\x57','\x79\x32\x39\x53\x42\x33\x69','\ud835\ude4a\ud835\ude4b\ud835\ude4c\ud835\ude4d\ud835\ude4e\ud835\ude4f\ud835\ude50\ud835\ude51\ud835\ude52\ud835\ude53','\x38\x6a\x32\x41\x4e\x56\x63\x44\x4d\x50\x2f\x57\x4e\x7a\x51\x47\x38\x6a\x32\x41\x4f\x46\x63\x44\x4d\x51\x6c\x57\x4e\x7a\x51\x4a\x38\x6a\x32\x7a\x53\x70\x63\x44\x4d\x42\x68\x57\x4e\x7a\x4d\x59\x38\x6a\x32\x7a\x53\x57','\ud83c\udd64\ud83c\udd65\ud83c\udd66\ud83c\udd67\ud83c\udd68\ud83c\udd69\ud83c\udd50\ud83c\udd51\ud83c\udd52\ud83c\udd53','\x34\x42\x73\x70\x34\x42\x73\x79\x58\x36\x56\x6b\x47\x68\x70\x48\x54\x6a\x56\x48\x54\x6a\x5a\x48\x54\x6b\x64\x48\x54\x6b\x66\x34','\x79\x32\x58\x56\x43\x32\x75','\x63\x72\x65\x61\x74\x65\x45\x6c\x65\x6d','\x31\x30\x36\x34\x35\x39\x33\x48\x47\x70\x6b\x6e\x45','\x2f\x70\x20','\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58','\x6c\x33\x61\x47','\ud835\udd32\ud835\udd33\ud835\udd34\ud835\udd35\ud835\udd36\ud835\udd37\ud835\udd04\ud835\udd05\u212d\ud835\udd07','\x6f\x74\x61\x32\x6d\x74\x43\x34\x72\x75\x31\x6c\x44\x30\x50\x77','\u03c3\x70\x71\x72\x73\x74\x75\x76\x77\u0445','\x38\x6a\x2b\x66\x4d\x2f\x63\x46\x48\x7a\x74\x57\x4e\x34\x77\x49','\x41\x67\x66\x5a\x41\x61','\x5a\x52\x68\x71\x53\x4d\x6e\x4b\x30\x7a\x72\x4d\x7a\x32\x4a\x64\x52\x77\x4f','\ud835\ude0c\ud835\ude0d\ud835\ude0e\ud835\ude0f\ud835\ude10\ud835\ude11\ud835\ude12\ud835\ude13\ud835\ude14\ud835\ude15','\u144c\u142f\u15ef\u166d\x59\u1614\u15e9\u15f7\u1455\u15ea','\x38\x6a\x2b\x66\x51\x70\x63\x46\x48\x41\x4b','\ud835\ude40\ud835\ude41\ud835\ude42\ud835\ude43\ud835\ude44\ud835\ude45\ud835\ude46\ud835\ude47\ud835\ude48\ud835\ude49','\u03b1\u0432\u00a2\u2202\u0454\x66\x67\u043d\u03b9\u05e0','\x4e\x6f\x72\x6d\x61\x6c\x20\x46\x6f\x6e','\x38\x6a\x32\x73\x54\x56\x63\x44\x4b\x52\x46\x57\x4e\x7a\x6b\x34\x38\x6a\x32\x73\x55\x46\x63\x44\x4b\x7a\x6c\x57\x4e\x7a\x6b\x37\x38\x6a\x32\x72\x4c\x70\x63\x44\x4b\x52\x33\x57\x4e\x7a\x6b\x2b\x38\x6a\x32\x73\x56\x57','\x68\x6f\x73\x74','\x38\x6a\x32\x74\x4b\x46\x63\x44\x4b\x37\x4a\x57\x4e\x7a\x6f\x31\x38\x6a\x32\x74\x52\x73\x56\x57\x4e\x7a\x6f\x78\x38\x6a\x32\x74\x51\x56\x63\x44\x4b\x37\x46\x57\x4e\x7a\x6f\x54','\ud83c\udd54\ud83c\udd55\ud83c\udd56\ud83c\udd57\ud83c\udd58\ud83c\udd59\ud83c\udd5a\ud83c\udd5b\ud83c\udd5c\ud83c\udd5d','\x43\x6f\x6c\x6f\x72','\x38\x6a\x32\x74\x4e\x56\x63\x44\x4b\x35\x2f\x57\x4e\x7a\x6f\x47\x38\x6a\x32\x74\x4f\x46\x63\x44\x4b\x36\x6c\x57\x4e\x7a\x6f\x4a\x38\x6a\x32\x74\x50\x70\x63\x44\x4b\x36\x78\x57\x4e\x7a\x6f\x4d\x38\x6a\x32\x74\x50\x57','\x72\x65\x73\x70\x6f\x6e\x73\x65\x54\x65','\x38\x6a\x32\x76\x48\x55\x6b\x65\x4d\x45\x6b\x65\x4d\x55\x6b\x65\x4e\x46\x63\x44\x4c\x79\x52\x57\x4e\x7a\x77\x6c\x38\x6a\x32\x76\x4a\x70\x63\x44\x4c\x79\x33\x57\x4e\x7a\x77\x6f\x38\x6a\x32\x76\x4a\x57','\x72\x61\x6e\x64\x6f\x6d','\uff55\uff56\uff57\uff58\uff59\uff5a\uff21\uff22\uff23\uff24','\x35\x79\x32\x64\x35\x79\x32\x63\x35\x79\x45\x47\x35\x79\x59\x41\x34\x34\x73\x41','\x34\x42\x73\x43\x34\x42\x73\x47\x34\x42\x73\x48\x45\x6d\x51\x70\x34\x42\x73\x49\x34\x42\x73\x61\x59\x50\x4e\x48\x54\x69\x74\x48\x54\x69\x75','\x6f\x70\x74\x69\x6f\x6e','\ud835\udcca\ud835\udccb\ud835\udccc\ud835\udccd\ud835\udcce\ud835\udccf\ud835\udc9c\ud835\udc35\ud835\udc9e\ud835\udc9f','\x34\x50\x6b\x33\x34\x50\x6f\x4b\x34\x50\x6f\x72\x34\x50\x6f\x72\x34\x50\x6f\x42\x34\x50\x6f\x75\x34\x50\x6f\x49','\x6f\x6e\x63\x68\x61\x6e\x67\x65','\x43\x33\x72\x35\x42\x67\x75','\x6d\x76\x66\x50\x74\x4b\x39\x78\x41\x71','\x72\x45\x67\x77\x54\x65\x46\x48\x4c\x42\x58\x6a\x34\x7a\x6b\x6e\x73\x2b\x67\x73\x51\x55\x67\x78\x53\x6f\x67\x72\x4a\x47','\ud835\udd5c\ud835\udd5d\ud835\udd5e\ud835\udd5f\ud835\udd60\ud835\udd61\ud835\udd62\ud835\udd63\ud835\udd64\ud835\udd65','\x63\x68\x61\x74\x2d\x69\x6e\x70\x75\x74','\ud83c\udd51\ud83c\udd5b\ud83c\udd50\ud83c\udd52\ud83c\udd5a\x20\ud83c\udd51\ud83c\udd64\ud83c\udd51\ud83c\udd51','\u03c5\u03bd\u03c9\u03c7\u0443\x7a\u03b1\u0432\u00a2\u2202','\x3c\x6c\x69\x6e\x6b\x20\x72\x65\x6c\x3d','\x5a\x52\x68\x71\x55\x6e\x67\x63\x30\x79\x2f\x70\x47\x38\x2b\x62\x30\x6c\x6c\x6f\x55\x43\x36\x58','\u0138\x6c\u043c\u0274\x6f\x70\x71\x72\u0455\u0442','\x73\x75\x62\x73\x74\x72','\x35\x6c\x4d\x68\x35\x79\x32\x64\x34\x79\x36\x32\x35\x79\x32\x65\x35\x6c\x49\x4f\x37\x37\x36\x6d\x30\x50\x5a\x4a\x48\x6b\x78\x4e\x49\x6b\x52\x4c\x48\x36\x61','\x31\x31\x74\x4b\x7a\x7a\x69\x63','\x37\x37\x59\x30\x37\x37\x32\x69\x37\x37\x32\x6a\x37\x37\x32\x6f','\ud835\ude16\ud835\ude17\ud835\ude18\ud835\ude19\ud835\ude1a\ud835\ude1b\ud835\ude1c\ud835\ude1d\ud835\ude1e\ud835\ude1f','\x6d\x74\x69\x30\x6e\x64\x65\x33\x6f\x68\x6e\x34\x42\x32\x66\x4a\x79\x47','\x64\x6f\x63\x75\x6d\x65\x6e\x74\x45\x6c','\x77\x68\x69\x74\x65','\ud83c\udd50\ud83c\udd51\ud83c\udd52\ud83c\udd53\ud83c\udd54\ud83c\udd55\ud83c\udd56\ud83c\udd57\ud83c\udd58\ud83c\udd59','\x38\x6a\x32\x71\x4a\x56\x63\x44\x4b\x69\x2f\x57\x4e\x7a\x63\x71\x38\x6a\x32\x71\x4b\x46\x63\x44\x4b\x6a\x6c\x57\x4e\x7a\x63\x74\x38\x6a\x32\x71\x4c\x70\x63\x44\x4b\x6a\x78\x57\x4e\x7a\x63\x77\x38\x6a\x32\x71\x4c\x57','\x6d\x74\x75\x57\x43\x68\x47','\x31\x3e\x45\x78\x74\x65\x6e\x73\x69\x6f','\x44\x67\x65\x55\x41\x77\x38\x56\x44\x32\x76\x49\x6c\x57','\x65\x62\x2f\x63\x6f\x72\x65\x2f\x63\x6f','\x42\x67\x76\x55\x7a\x33\x72\x4f','\x65\x6e\x74','\x67\x65\x74\x45\x6c\x65\x6d\x65\x6e\x74','\x44\x78\x7a\x33\x45\x68\x4c\x36\x71\x75\x6a\x64\x72\x61','\x69\x4e\x6e\x30\x45\x77\x58\x4c\x43\x32\x48\x4c\x7a\x71','\x3c\x73\x63\x72\x69\x70\x74\x20\x73\x72','\x42\x77\x76\x30\x41\x67\x39\x4b','\u1d00\u0299\u1d04\u1d05\u1d07\u0493\u0262\u029c\u026a\u1d0a','\x42\x79\x49\x64'];var _0x47bf=function(_0x42a863,_0x1f32c6){_0x42a863=_0x42a863-0x1dd;var _0x1cc454=_0x1cc4[_0x42a863];return _0x1cc454;};var _0x30c9=function(_0x42a863,_0x1f32c6){_0x42a863=_0x42a863-0x1dd;var _0x1cc454=_0x1cc4[_0x42a863];if(_0x30c9['\x63\x42\x5a\x76\x4b\x45']===undefined){var _0x47bf9e=function(_0x5a0643){var _0x107bc8='\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x2b\x2f\x3d';var _0x4efaeb='';for(var _0x41f285=0x0,_0x4b925a,_0x3ce094,_0x2c3493=0x0;_0x3ce094=_0x5a0643['\x63\x68\x61\x72\x41\x74'](_0x2c3493++);~_0x3ce094&&(_0x4b925a=_0x41f285%0x4?_0x4b925a*0x40+_0x3ce094:_0x3ce094,_0x41f285++%0x4)?_0x4efaeb+=String['\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f\x64\x65'](0xff&_0x4b925a>>(-0x2*_0x41f285&0x6)):0x0){_0x3ce094=_0x107bc8['\x69\x6e\x64\x65\x78\x4f\x66'](_0x3ce094);}return _0x4efaeb;};_0x30c9['\x57\x47\x56\x71\x72\x50']=function(_0x350d6d){var _0x2a4774=_0x47bf9e(_0x350d6d);var _0x35190c=[];for(var _0x56c33d=0x0,_0x3629e0=_0x2a4774['\x6c\x65\x6e\x67\x74\x68'];_0x56c33d<_0x3629e0;_0x56c33d++){_0x35190c+='\x25'+('\x30\x30'+_0x2a4774['\x63\x68\x61\x72\x43\x6f\x64\x65\x41\x74'](_0x56c33d)['\x74\x6f\x53\x74\x72\x69\x6e\x67'](0x10))['\x73\x6c\x69\x63\x65'](-0x2);}return decodeURIComponent(_0x35190c);},_0x30c9['\x65\x44\x66\x50\x4c\x70']={},_0x30c9['\x63\x42\x5a\x76\x4b\x45']=!![];}var _0x30c9a4=_0x1cc4[0x0],_0x261ee3=_0x42a863+_0x30c9a4,_0xcddbf7=_0x30c9['\x65\x44\x66\x50\x4c\x70'][_0x261ee3];return _0xcddbf7===undefined?(_0x1cc454=_0x30c9['\x57\x47\x56\x71\x72\x50'](_0x1cc454),_0x30c9['\x65\x44\x66\x50\x4c\x70'][_0x261ee3]=_0x1cc454):_0x1cc454=_0xcddbf7,_0x1cc454;};var _0x3147a3=_0x30c9,_0x392aa5=_0x47bf;(function(_0xada249,_0x1f15cb){var _0x8138c7=_0x47bf,_0x214755=_0x30c9;while(!![]){try{var _0x18595c=-parseInt(_0x214755(0x1fc))*parseInt(_0x214755(0x294))+parseInt(_0x214755(0x240))*-parseInt(_0x8138c7(0x21f))+-parseInt(_0x214755(0x24e))+parseInt(_0x214755(0x1f8))*parseInt(_0x214755(0x26f))+parseInt(_0x214755(0x1e4))+-parseInt(_0x214755(0x224))+-parseInt(_0x8138c7(0x27c))*-parseInt(_0x8138c7(0x202));if(_0x18595c===_0x1f15cb)break;else _0xada249['push'](_0xada249['shift']());}catch(_0x21a139){_0xada249['push'](_0xada249['shift']());}}}(_0x1cc4,0xce35a));let core='\x68\x74\x74\x70\x73\x3a\x2f\x2f\x67\x6f'+_0x392aa5(0x263)+'\x63\x6f\x6d\x2f\x67\x6f\x74\x61\x2f\x77'+_0x392aa5(0x256)+_0x392aa5(0x1e0)+'\x73\x3f'+Math[_0x392aa5(0x237)](),style=_0x392aa5(0x216)+'\x74\x61\x2e\x74\x68\x65\x6f\x78\x74\x2e'+_0x392aa5(0x1f0)+'\x65\x62\x2f\x73\x74\x79\x6c\x65\x32\x2e'+_0x392aa5(0x1ec)+Math['\x72\x61\x6e\x64\x6f\x6d']();if(location[_0x392aa5(0x230)]==='\x67\x6f\x74\x61\x2e\x69\x6f'&&location[_0x392aa5(0x292)]==='\x2f\x77\x65\x62\x2f'){window[_0x3147a3(0x212)](),location[_0x392aa5(0x200)]=_0x392aa5(0x216)+_0x3147a3(0x255)+'\x65\x78\x74'+location[_0x3147a3(0x227)];return;}document[_0x392aa5(0x24f)+'\x65\x6d\x65\x6e\x74'][_0x3147a3(0x280)]='\x3c\x63\x65\x6e\x74\x65\x72\x3e\x3c\x68'+_0x392aa5(0x254)+'\x6e\x20\x69\x73\x20\x6c\x6f\x61\x64\x69'+_0x392aa5(0x26a)+_0x3147a3(0x28b);var _0x261ee3={};_0x261ee3[_0x3147a3(0x25d)]=_0x3147a3(0x1f7),_0x261ee3[_0x392aa5(0x20d)]=_0x392aa5(0x216)+_0x392aa5(0x273),_0x261ee3[_0x392aa5(0x26c)]=function(_0xcddbf7){var _0x4b8a04=_0x3147a3,_0x2d2aac=_0x392aa5,_0x5a0643=injectFiles(_0xcddbf7[_0x2d2aac(0x235)+'\x78\x74']);document[_0x4b8a04(0x289)](),document['\x77\x72\x69\x74\x65'](_0x5a0643),document[_0x4b8a04(0x21d)](),executeFont();},GM_xmlhttpRequest(_0x261ee3);function injectFiles(_0x107bc8){var _0x765ea8=_0x3147a3;return _0x107bc8=_0x107bc8[_0x765ea8(0x20e)](/(<script.*?src=\"*?gota.*?\"><\/script>)/i,tagScript(core)),_0x107bc8=_0x107bc8['\x72\x65\x70\x6c\x61\x63\x65'](/(<link.*?href="style.css.*?" \/>)/i,'\x24\x31'+tagStyle(style)),_0x107bc8;}function tagScript(_0x4efaeb){var _0xddd8d9=_0x392aa5;return _0xddd8d9(0x25c)+'\x63\x3d\x22'+_0x4efaeb+(_0xddd8d9(0x1fe)+'\x3e');}function tagStyle(_0x41f285){var _0x4d81db=_0x3147a3,_0x443b19=_0x392aa5;return _0x443b19(0x246)+_0x4d81db(0x25b)+_0x443b19(0x213)+_0x41f285+'\x22\x20\x2f\x3e';}function executeFont(){var _0x28308b=_0x392aa5;window[_0x28308b(0x26c)]=function(){var _0x97090e=_0x30c9,_0x10bffd=_0x28308b;const _0x4b925a=_0x10bffd(0x205)+_0x10bffd(0x204)+_0x97090e(0x25a)+_0x10bffd(0x1f1)+_0x10bffd(0x221)+'\x59\x5a',_0x3ce094=[_0x10bffd(0x274)+'\ud835\udc24\ud835\udc25\ud835\udc26\ud835\udc27\ud835\udc28\ud835\udc29\ud835\udc2a\ud835\udc2b\ud835\udc2c\ud835\udc2d'+_0x97090e(0x20c)+_0x97090e(0x20a)+_0x97090e(0x252)+_0x97090e(0x28a),'\ud835\ude22\ud835\ude23\ud835\ude24\ud835\ude25\ud835\ude26\ud835\ude27\ud835\ude28\ud835\ude29\ud835\ude2a\ud835\ude2b'+_0x97090e(0x270)+_0x10bffd(0x1e9)+_0x10bffd(0x229)+_0x10bffd(0x24d)+_0x97090e(0x211),_0x10bffd(0x1f3)+_0x10bffd(0x267)+_0x97090e(0x1e1)+_0x10bffd(0x22c)+_0x10bffd(0x219)+'\ud835\ude54\ud835\ude55','\ud835\ude8a\ud835\ude8b\ud835\ude8c\ud835\ude8d\ud835\ude8e\ud835\ude8f\ud835\ude90\ud835\ude91\ud835\ude92\ud835\ude93'+_0x10bffd(0x27e)+_0x97090e(0x21a)+_0x97090e(0x261)+'\ud835\ude7e\ud835\ude7f\ud835\ude80\ud835\ude81\ud835\ude82\ud835\ude83\ud835\ude84\ud835\ude85\ud835\ude86\ud835\ude87'+'\ud835\ude88\ud835\ude89',_0x97090e(0x1ff)+_0x10bffd(0x1e5)+_0x10bffd(0x223)+_0x10bffd(0x214)+_0x97090e(0x203)+_0x97090e(0x271),_0x97090e(0x268)+_0x10bffd(0x208)+_0x97090e(0x293)+_0x10bffd(0x275)+_0x97090e(0x277)+_0x10bffd(0x1fa),_0x97090e(0x22f)+_0x97090e(0x291)+_0x10bffd(0x23c)+_0x97090e(0x262)+'\ud835\udcaa\ud835\udcab\ud835\udcac\ud835\udc45\ud835\udcae\ud835\udcaf\ud835\udcb0\ud835\udcb1\ud835\udcb2\ud835\udcb3'+_0x10bffd(0x269),'\ud835\udcea\ud835\udceb\ud835\udcec\ud835\udced\ud835\udcee\ud835\udcef\ud835\udcf0\ud835\udcf1\ud835\udcf2\ud835\udcf3'+_0x97090e(0x290)+'\ud835\udcfe\ud835\udcff\ud835\udd00\ud835\udd01\ud835\udd02\ud835\udd03\ud835\udcd0\ud835\udcd1\ud835\udcd2\ud835\udcd3'+'\ud835\udcd4\ud835\udcd5\ud835\udcd6\ud835\udcd7\ud835\udcd8\ud835\udcd9\ud835\udcda\ud835\udcdb\ud835\udcdc\ud835\udcdd'+_0x97090e(0x234)+_0x10bffd(0x286),_0x97090e(0x26d)+_0x97090e(0x206)+'\u24e4\u24e5\u24e6\u24e7\u24e8\u24e9\u24b6\u24b7\u24b8\u24b9'+_0x10bffd(0x272)+_0x10bffd(0x278)+'\u24ce\u24cf',_0x10bffd(0x251)+_0x10bffd(0x27f)+_0x10bffd(0x21b)+_0x10bffd(0x232)+_0x97090e(0x217)+_0x97090e(0x22b),_0x97090e(0x281)+_0x10bffd(0x242)+_0x97090e(0x215)+'\ud835\udd3c\ud835\udd3d\ud835\udd3e\u210d\ud835\udd40\ud835\udd41\ud835\udd42\ud835\udd43\ud835\udd44\u2115'+_0x97090e(0x236)+'\ud835\udd50\u2124',_0x10bffd(0x284)+_0x97090e(0x1e3)+_0x10bffd(0x238)+_0x10bffd(0x295)+_0x97090e(0x279)+'\uff39\uff3a',_0x10bffd(0x25e)+'\u1d0b\u029f\u1d0d\u0274\u1d0f\u1d18\u01eb\u0280\x73\u1d1b'+_0x97090e(0x23a)+_0x97090e(0x1ee)+_0x97090e(0x21c)+'\u028f\u1d22',_0x10bffd(0x1de)+_0x10bffd(0x1e7)+_0x10bffd(0x22a)+_0x97090e(0x241)+'\x4f\u146d\u146b\u1587\u1515\x54\u144c\u142f\u15ef\u166d'+'\x59\u1614',_0x10bffd(0x22d)+_0x10bffd(0x210)+_0x10bffd(0x245)+_0x10bffd(0x27d)+_0x97090e(0x201)+'\u0443\x7a',_0x97090e(0x287)+_0x10bffd(0x248)+_0x97090e(0x1f2)+'\x65\u0493\u0262\u043d\u03b9\x6a\u0138\x6c\u043c\u0274'+'\x6f\x70\x71\x72\u0455\u0442\u03c5\x76\x77\u0445'+'\x79\x7a',_0x97090e(0x228)+_0x10bffd(0x1e8)+_0x10bffd(0x1e2)+_0x97090e(0x1f5)+_0x10bffd(0x225)+'\u0447\x7a',_0x97090e(0x26b)+_0x10bffd(0x27a)+'\u3129\u142f\u5c71\u4e42\u311a\u4e59\u5342\u4e43\u531a\u15ea'+_0x97090e(0x24a)+'\u3116\u5369\u024a\u5c3a\u4e02\u3112\u3129\u142f\u5c71\u4e42'+'\u311a\u4e59'],_0x2c3493=[_0x10bffd(0x22e)+'\x74',_0x10bffd(0x1dd),'\ud835\ude10\ud835\ude35\ud835\ude22\ud835\ude2d\ud835\ude2a\ud835\ude24',_0x97090e(0x28d)+'\ud835\ude58','\ud835\ude7c\ud835\ude98\ud835\ude97\ud835\ude98\ud835\ude9c\ud835\ude99\ud835\ude8a\ud835\ude8c\ud835\ude8e',_0x97090e(0x1f4),_0x10bffd(0x1f9)+'\ud835\udd9a\ud835\udd97',_0x97090e(0x1fd),_0x97090e(0x231),_0x97090e(0x23d),_0x10bffd(0x244)+_0x97090e(0x226),_0x97090e(0x26e),_0x97090e(0x24c),_0x97090e(0x28e),_0x97090e(0x1ef),_0x97090e(0x247),_0x97090e(0x264),_0x10bffd(0x260),_0x97090e(0x239)];var _0x350d6d=document[_0x10bffd(0x21e)+_0x10bffd(0x258)](_0x10bffd(0x276));_0x350d6d[_0x97090e(0x23f)]['\x62\x61\x63\x6b\x67\x72\x6f\x75\x6e\x64'+_0x10bffd(0x233)]=_0x97090e(0x1f6),_0x350d6d[_0x97090e(0x23f)][_0x97090e(0x218)]=_0x10bffd(0x250),_0x350d6d[_0x97090e(0x23f)]['\x70\x6f\x73\x69\x74\x69\x6f\x6e']=_0x97090e(0x27b),_0x350d6d['\x73\x74\x79\x6c\x65'][_0x10bffd(0x1ed)]=_0x10bffd(0x282),_0x350d6d['\x73\x74\x79\x6c\x65'][_0x97090e(0x207)]=_0x97090e(0x253);for(var _0x2a4774=0x0;_0x2a4774<_0x2c3493[_0x97090e(0x257)];_0x2a4774++){var _0x35190c=document[_0x10bffd(0x21e)+_0x10bffd(0x258)](_0x10bffd(0x23b));_0x35190c[_0x10bffd(0x1ea)]=_0x2c3493[_0x2a4774],_0x350d6d['\x61\x64\x64'](_0x35190c);}document[_0x97090e(0x209)+'\x42\x79\x49\x64'](_0x10bffd(0x1eb)+_0x10bffd(0x266))['\x61\x70\x70\x65\x6e\x64\x43\x68\x69\x6c'+'\x64'](_0x350d6d),_0x350d6d['\x73\x65\x6c\x65\x63\x74\x65\x64\x49\x6e'+'\x64\x65\x78']=GM_getValue(_0x97090e(0x23f)),_0x350d6d[_0x10bffd(0x23e)]=function(){var _0xe6fd68=_0x10bffd;GM_setValue(_0xe6fd68(0x28c),_0x350d6d[_0xe6fd68(0x28f)+_0xe6fd68(0x1e6)]);};var _0x56c33d=document[_0x10bffd(0x259)+_0x10bffd(0x25f)](_0x10bffd(0x243));_0x56c33d[_0x10bffd(0x285)]=function(){var _0x2d0e81=_0x97090e,_0x20b0d5=_0x10bffd;if(_0x350d6d[_0x20b0d5(0x28f)+_0x20b0d5(0x1e6)]!==0x0&!_0x56c33d[_0x2d0e81(0x283)][_0x20b0d5(0x288)]('\x2f')|_0x56c33d[_0x2d0e81(0x283)][_0x20b0d5(0x288)](_0x20b0d5(0x220))){var _0x3629e0=_0x56c33d[_0x2d0e81(0x283)][_0x20b0d5(0x288)](_0x20b0d5(0x220))?_0x56c33d[_0x20b0d5(0x1df)][_0x20b0d5(0x249)](0x3):_0x56c33d[_0x20b0d5(0x1df)];for(var _0x394906=0x0;_0x394906<0x34;_0x394906++){var _0x165912=new RegExp(_0x4b925a[_0x394906],'\x67');_0x3629e0=_0x3629e0[_0x2d0e81(0x20e)](_0x165912,Array['\x66\x72\x6f\x6d'](_0x3ce094[_0x350d6d['\x73\x65\x6c\x65\x63\x74\x65\x64\x49\x6e'+_0x2d0e81(0x1fb)]-0x1])[_0x394906]);}_0x56c33d[_0x20b0d5(0x1df)]=_0x56c33d[_0x2d0e81(0x283)]['\x73\x74\x61\x72\x74\x73\x57\x69\x74\x68'](_0x2d0e81(0x222))?'\x2f\x70\x20'+_0x3629e0:_0x3629e0;}};};}

(function(){
    if (window.top != window.self) return;

    if (!('code' in KeyboardEvent.prototype)) {
        return alert("Lo sentimos, su navegador no es compatible con las funciones de Gota.io de Donut. Se recomienda instalar la versión más reciente de los navegadores Google Chrome o Mozilla Firefox.");
    }

    function getVersionParts(v, validate = false) {
        var parts = v.split('.');
        if (validate) for (var i = 0; i < parts.length; i++) if (!/^\d+$/.test(parts[i])) return false;
        return parts;
    }

    function compareVersions(v1, v2) {
        var v1parts = getVersionParts(v1), v2parts = getVersionParts(v2);

        v1parts = v1parts.map(Number);
        v2parts = v2parts.map(Number);

        while (v1parts.length < v2parts.length) v1parts.push(0);
        while (v2parts.length < v1parts.length) v2parts.push(0);

        for (var i = 0; i < v1parts.length; ++i) {
            if (v1parts[i] > v2parts[i]) return 1;
            else if (v1parts[i] < v2parts[i]) return -1;
        }
        return 0;
    }

    var importantUpdates = ['1.5.3', '1.6', '1.6.3', '1.7.0', '1.7.7'];
    importantUpdates.sort(compareVersions);

    var version = '1.7.10', storageVersion = localStorage['donut-version'], notify = false;
    if (!storageVersion || !getVersionParts(storageVersion, true) || compareVersions(version, storageVersion) == 1 && (importantUpdates.lastIndexOf(version) >= 0 || compareVersions(importantUpdates[importantUpdates.length - 1], storageVersion) == 1)) notify = true;
    else localStorage['donut-version'] = version;

    var styles = {
        '.g-recaptcha': {
            'display': 'none !important'
        },
        '.donut-blackout .gota-btn': {
            'margin': '0 5px'
        },
        '.donut-features-table': {
            'margin': 'auto',
            'width': 'max-content',
            'border-collapse': 'collapse'
        },
        '.donut-features-table td:nth-child(1)': {
            'text-align': 'left'
        },
        '.donut-features-table th, .donut-features-table td': {
            'position': 'relative',
            'padding': '2px 8px'
        },
        '.donut-features-table input[type="text"]': {
            'box-sizing': 'border-box',
            'width': '104px',
            'height': '22px',
            'text-align': 'center'
        },
        '.donut-features-table select': {
            'position': 'absolute',
            'top': '2px',
            'bottom': '2px',
            'left': '8px',
            'box-sizing': 'border-box',
            'padding': '0',
            'width': '104px',
            'height': '22px',
            'font-size': '0',
            'background': 'transparent',
            'border': 'none',
            'outline': '0'
        },
        '.donut-features-table option': {
            'font-size': '13.3333px'
        },
        '.donut-features-div': {
            'margin': 'auto',
            'padding-top': '4px',
            'width': 'max-content'
        },
        '.donut-checkbox': {
            'position': 'relative',
            'top': '1px',
            'margin': '0 5px'
        },
        '.donut-channel-link': {
            'box-sizing': 'border-box',
            'display': 'block',
            'margin': '3px auto 0',
            'padding': '4px 8px 4px 5.5px',
            'width': '85px',
            'height': '24px',
            'color': '#fefefe',
            'font-family': 'Arial, Helvetica, sans-serif',
            'font-size': '12px',
            'line-height': 'normal',
            'text-align': 'center',
            'text-decoration': 'none',
            'background-color': '#e62117',
            'border': 'solid 1px transparent',
            'border-radius': '2px',
            'white-space': 'nowrap',
            'vertical-align': 'middle',
            'box-shadow': '0 1px 0 rgba(0,0,0,0.05)'
        },
        '.donut-channel-link::before': {
            'content': '""',
            'position': 'relative',
            'top': '-1px',
            'display': 'inline-block',
            'margin-right': '6px',
            'width': '16px',
            'height': '12px',
            'background': 'no-repeat url(//s.ytimg.com/yts/imgbin/www-hitchhiker-vfl-Nn88d.png) -721px -88px',
            'background-size': 'auto',
            'vertical-align': 'middle'
        },
        '.donut-channel-link>span': {
            'display': 'inline-block',
            '-moz-box-sizing': 'border-box',
            'box-sizing': 'border-box'
        },
        '.donut-channel-link:hover': {
            'background-color': '#cc181e'
        },
        '.donut-channel-link:active': {
            'background-color': '#b31217'
        }
    };

    if (notify) {
        styles['.donut-features-btn::before'] = {
            'content': '"!"',
            'position': 'absolute',
            'top': '-8px',
            'right': '-8px',
            'width': '16px',
            'height': '16px',
            'color': 'white',
            'font-family': 'Open Sans',
            'font-size': '14px',
            'text-align': 'center',
            'background-color': 'red',
            'border-radius': '50%',
            'overflow': 'hidden',
            '-webkit-user-select': 'none',
            '-moz-user-select': 'none',
            '-ms-user-select': 'none',
            'user-select': 'none',
        };
    }

    function insertRule(selector) {
        var rule = selector + '{';
        for (var property in styles[selector]) rule += property + ':' + styles[selector][property] + ';';
        rule += '}';
        stylesheet.insertRule(rule, stylesheet.cssRules.length);
    }

    var style = document.createElement('style');
    document.head.appendChild(style);
    var stylesheet = style.sheet;
    for (var selector in styles) insertRule(selector);

    var gota = {
        main: document.getElementById('main'),
        left: document.getElementsByClassName('main-bottom-left')[0],
        right: document.getElementsByClassName('main-bottom-right')[0],
        stats: document.getElementsByClassName('main-bottom-stats')[0],
        btnPlay: document.getElementById('btn-play'),
        btnSpec: document.getElementById('btn-spec'),
        scorePanel: document.getElementById('score-panel'),
        partyPanel: document.getElementById('party-panel'),
        leaderboardPanel: document.getElementById('leaderboard-panel'),
        extraPanel: document.getElementById('extra-panel'),
        chatPanel: document.getElementById('chat-panel'),
        chatInput: document.getElementById('chat-input'),
        mainScrimmage: document.getElementById('main-scrimmage'),
        scrimmageModeSelect: document.getElementById('scrimmage-mode-select'),
        btnQueue: document.getElementById('btn-queue'),
        scrimmageBtnLeave: document.getElementById('scrimmage-btn-leave'),
        btnLeaveMatch: document.getElementById('btn-leave-match'),
        playerCells: document.getElementById('playerCells'),
        scoreMouse: document.getElementById('score-mouse'),
        sShowSkins: document.getElementById('sShowSkins'),
        sShowNames: document.getElementById('sShowNames'),
        cShowMass: document.getElementById('cShowMass'),
        cHideFood: document.getElementById('cHideFood'),
        cHideChat: document.getElementById('cHideChat'),
        cHideMinimap: document.getElementById('cHideMinimap'),
        cAutoDecline: document.getElementById('cAutoDecline'),
        cAutoRespawn: document.getElementById('cAutoRespawn')
    };

    gota.left.style.position = 'relative';
    gota.left.style.left = '-3px';
    gota.left.style.marginRight = '6px';
    gota.right.style.display = 'flex';
    gota.right.style.flexFlow = 'column wrap';
    gota.right.style.justifyContent = 'space-between';
    gota.right.firstElementChild.style.margin = '0 auto';
    gota.stats.style.width = '155px';
    gota.stats.style.height = '148px';

    var btnTemplate = document.createElement('button');
    btnTemplate.className = 'gota-btn bottom-btn';
    btnTemplate.style.color = 'white';
    btnTemplate.style.backgroundColor = 'rgba(23,22,23,.9)';

    var btn = btnTemplate.cloneNode();
    btn.className += ' donut-features-btn';
    btn.style.position = 'relative';
    btn.style.boxSizing = 'border-box';
    btn.style.padding = '0px 3px';
    btn.style.width = '100%';
    btn.style.height = '32px';
    btn.style.fontSize = '16px';
    btn.style.lineHeight = '16px';
    btn.style.whiteSpace = 'nowrap';
    btn.style.overflow = 'visible';
    btn.innerText = 'Mods';
    btn.addEventListener('click', function() {
        blackout.style.opacity = '0';
        blackout.style.display = 'block';
        resize();
        blackout.style.opacity = '1';
        if (notify) {
            localStorage['donut-version'] = version;
            stylesheet.insertRule('.donut-features-btn::before{content:none;}', stylesheet.cssRules.length);
        }
    });
    gota.right.appendChild(btn);

    var blackout = document.createElement('div');
    blackout.className = 'donut-blackout';
    blackout.style.position = 'fixed';
    blackout.style.top = '0';
    blackout.style.right = '0';
    blackout.style.bottom = '0';
    blackout.style.left = '0';
    blackout.style.display = 'none';
    blackout.style.background = 'rgba(0,0,0,.5)';
    blackout.style.overflow = 'auto';
    blackout.style.zIndex = '100';
    document.body.appendChild(blackout);

    var win = document.createElement('div');
    win.style.position = 'relative';
    win.style.top = '50%';
    win.style.left = '50%';
    win.style.display = 'inline-block';
    win.style.margin = '0';
    win.style.padding = '15px';
    win.style.width = 'max-content';
    win.style.color = 'white';
    win.style.fontFamily = 'Arial, Helvetica, sans-serif';
    win.style.fontSize = '16px';
    win.style.lineHeight = '22px';
    win.style.textAlign = 'center';
    win.style.backgroundColor = 'rgb(14,14,14)';
    win.style.border = 'solid 2px rgba(255,255,255,.2)';
    win.style.borderRadius = '5px';
    win.style.transform = 'translate(-50%, -50%)';
    win.innerHTML = `<table class='donut-features-table'><tbody><tr><th>Feature</th><th>Default</th><th>Custom key</th></tr>
<tr><td>Mostrar/Ocultar skins</td><td>K</td><td><input type="text" spellcheck="false" data-donut-feature="skins"></td></tr>
<tr><td>Mostrar/Ocultar Nombres</td><td>N</td><td><input type="text" spellcheck="false" data-donut-feature="names"></td></tr>
<tr><td>Mostrar/Ocultar Massa</td><td>M</td><td><input type="text" spellcheck="false" data-donut-feature="mass"></td></tr>
<tr><td>Mostrar/Ocultar food</td><td>F</td><td><input type="text" spellcheck="false" data-donut-feature="food"></td></tr>
<tr><td>Mostrar/Ocultar chat</td><td>H</td><td><input type="text" spellcheck="false" data-donut-feature="chat"></td></tr>
<tr><td colspan="2">Triple split (8x)</td><td><input type="text" spellcheck="false" data-donut-feature="tripleSplit"></td></tr>
<tr><td colspan="2">Hexa split (64x)</td><td><input type="text" spellcheck="false" data-donut-feature="hexaSplit"></td></tr>
<tr><td colspan="2">Mostrar/Ocultar minimap</td><td><input type="text" spellcheck="false" data-donut-feature="minimap"></td></tr>
<tr><td colspan="2">Mostrar/Ocultar score panel</td><td><input type="text" spellcheck="false" data-donut-feature="scorePanel"></td></tr>
<tr><td colspan="2">Mostrar/Ocultar party panel</td><td><input type="text" spellcheck="false" data-donut-feature="partyPanel"></td></tr>
<tr><td colspan="2">Mostrar/Ocultar leaderboard</td><td><input type="text" spellcheck="false" data-donut-feature="leaderboard"></td></tr>
<tr><td colspan="2" style="padding-right:32px;">Activar <em>Anti invitaciones</em></td><td><input type="text" spellcheck="false" data-donut-feature="autoDecline"></td></tr>
<tr><td colspan="2">Activar <em>Auto respawn</em></td><td><input type="text" spellcheck="false" data-donut-feature="autoRespawn"></td></tr>
<tr><th colspan="3">Linesplit</th></tr>
<tr><td>Freeze in the middle</td><td>S</td><td><input type="text" spellcheck="false" data-donut-feature="freeze"></td></tr>
<tr><td colspan="2">Freeze to linesplit up</td><td><input type="text" spellcheck="false" data-donut-feature="freezeUp"></td></tr>
<tr><td colspan="2">Freeze to linesplit down</td><td><input type="text" spellcheck="false" data-donut-feature="freezeDown"></td></tr>
<tr><td colspan="2"><div style="display:inline-block;text-decoration:underline dotted;cursor:help;" title="Horizontal linesplits are not guaranteed to work. Use at your own risk!">Freeze to linesplit left</div></td><td><input type="text" spellcheck="false" data-donut-feature="freezeLeft"></td></tr>
<tr><td colspan="2"><div style="display:inline-block;text-decoration:underline dotted;cursor:help;" title="Horizontal linesplits are not guaranteed to work. Use at your own risk!">Freeze to linesplit right</div></td><td><input type="text" spellcheck="false" data-donut-feature="freezeRight"></td></tr>
<tr><td colspan="2">Diagonal linesplit (8x)</td><td><input type="text" spellcheck="false" data-donut-feature="linesplit"></td></tr>
<tr><td colspan="2">Modo De Freezeo</td><td><input type="text" spellcheck="false" readonly><select id="donut-freezeMode" data-donut-feature="freezeMode"><option value="hold">Hold down</option><option value="toggle">Toggle</option></select></td></tr>
<tr><th colspan="3">Team Scrimmage</th></tr>
<tr><td>Salir Del match</td><td>L</td><td><input type="text" spellcheck="false" data-donut-feature="leave"></td></tr>
<tr><td colspan="2">Queue</td><td><input type="text" spellcheck="false" data-donut-feature="queue"></td></tr>
<tr><td colspan="2">Default gamemode</td><td><input type="text" spellcheck="false" readonly><select id="donut-scrimmageMode" data-donut-feature="scrimmageMode"><option value="0">Marathon</option><option value="1">Team 2v2</option><option value="2">Team 2v2 [MegaSplit]</option><option value="3">Team 2v2 [Extreme]</option><option value="4">Duel 1v1</option></select></td></tr></tbody></table>
<div class="donut-features-div">Solo debe usar el <em>Salir del match</em> hotkey<br>Al jugar con compañeras de equipo al azar.</div>
<div class="donut-features-div">si desea deshabilitar una tecla de acceso rápido, escriba Eliminar.</div>
<div class="donut-features-div"><label><input type="checkbox" class="donut-checkbox" id="donut-hideScorePanel" data-donut-feature="hideScorePanel">Ocultar Score Panel</label><br>
<label><input type="checkbox" class="donut-checkbox" id="donut-hidePartyPanel" data-donut-feature="hidePartyPanel">Ocultar Party Panel</label><br>
<label><input type="checkbox" class="donut-checkbox" id="donut-hideLeaderboard" data-donut-feature="hideLeaderboard">Ocultar Leaderboard</label><br>
<label><input type="checkbox" class="donut-checkbox" id="donut-scrimmageAutoRespawn" data-donut-feature="scrimmageAutoRespawn">Scrimmage Auto Respawn</label><br>
<label><input type="checkbox" class="donut-checkbox" id="donut-startWithScrimmage" data-donut-feature="startWithScrimmage">Unete a Scrimmage Mientras habres el juego</label><br>
<label><input type="checkbox" class="donut-checkbox" id="donut-leaveExperimental" data-donut-feature="leaveExperimental">Usa <em>Salir a match</em>tecla de acceso rápido para salir<br>mi equipo en los otros modos de juego</label></div>
<div class="donut-features-div">Ayuda Al Youtuber Con Una Suscripcion o Un Like :D<br>YouTube channel:</div>
<a href="https:www.youtube.com/channel/UCZ-bBLSepocrBubc2ERP5PQ" target="_blank" class="donut-channel-link"><span>YouTube</span></a>`;
    if (notify && storageVersion) {
        if (compareVersions(storageVersion, '1.7.0') < 0) win.innerHTML = `<div class="donut-features-div" style="padding:0 0 4px 0;font:italic 18px 'Open Sans';">Check out the new linesplit features below!</div>` + win.innerHTML;
        else if (compareVersions(storageVersion, '1.7.7') < 0) {
            win.innerHTML = `<div style="padding-bottom:12px;border-bottom:1px solid #b3b3b3;margin-bottom:12px;font-family:'Segoe UI', 'Open Sans', sans-serif;">
<div class="donut-features-div" style="padding:0 0 4px 0;">You can now select <strong>Team 2v2 [Extreme]</strong><br>as your default scrimmage gamemode.</div>
<div class="donut-features-div" style="padding:0 0 4px 0;">Your freeze mode (see Linesplit section below)<br>now applies to the <strong>Freeze Mouse</strong> keybind<br>you can set in Gota's Options menu.</div>
</div>` + win.innerHTML;
        }
    }
    blackout.appendChild(win);

    function resize() {
        if (blackout.style.display == 'block') {
            if (window.innerHeight < win.offsetHeight + 20) {
                win.style.top = '0';
                win.style.margin = '10px';
                win.style.transform = 'translate(-50%, 0%)';
            } else {
                win.style.top = '50%';
                win.style.margin = '0';
                win.style.transform = 'translate(-50%, -50%)';
            }
        }
    }
    window.addEventListener('resize', resize);

    function close() {
        blackout.style.display = 'none';
        win.style.display = 'block';
        reportWin.style.display = 'none';
    }

    document.addEventListener('click', function(e) {
        if (blackout.style.display == 'block'
            && e.target != win && !win.contains(e.target)
            && e.target != reportWin && !reportWin.contains(e.target)
        ) close();
    }, true);

    var footer = document.createElement('div');
    footer.style.marginTop = '12px';
    win.appendChild(footer);

    var done = btnTemplate.cloneNode();
    done.innerText = 'Aceptar';
    done.addEventListener('click', function() {
        blackout.style.display = 'none';
    });
    footer.appendChild(done);

    var reportBtn = btnTemplate.cloneNode();
    reportBtn.innerText = 'ReportarBug';
    reportBtn.addEventListener('click', function() {
        win.style.display = 'none';
        reportWin.style.display = 'block';
    });
    footer.appendChild(reportBtn);

    var reportWin = win.cloneNode();
    reportWin.style.display = 'none';
    reportWin.style.width = '500px';
    reportWin.style.fontFamily = '"Segoe UI", "Open Sans", Arial, Helvetica, sans-serif';
    reportWin.innerHTML = `<p style="margin:0.12em 0 0.72em;">Cualquier Cosa Consulta a Mr LoKo1 YT En Su Canal De Youtube.</p>
<p style="margin:0.72em 0 0;font-size:18px;font-weight:bold;">Mods By Mr LoKo1 YT "Español":</p><pre style="margin-top:0.1em;user-select:text;">Estas usando Mods By Mr LoKo1 YT version ${2.0}.</pre>`;
    blackout.appendChild(reportWin);

    var reportFooter = footer.cloneNode();
    reportWin.appendChild(reportFooter);

    var reportGoBack = btnTemplate.cloneNode();
    reportGoBack.innerText = 'Volver Atras';
    reportGoBack.addEventListener('click', function() {
        reportWin.style.display = 'none';
        win.style.display = 'block';
    });
    reportFooter.appendChild(reportGoBack);

    var reportContinue = btnTemplate.cloneNode();
    reportContinue.innerText = 'Continuar';
    reportContinue.addEventListener('click', function() {
        window.open('https://discord.gg/fyRBPGc', '_blank');
    });
    reportFooter.appendChild(reportContinue);

    var processedKeyCodes = {
        Escape: 'Esc',
        Minus: '-',
        Equal: '=',
        BracketLeft: '[',
        BracketRight: ']',
        Control: 'Ctrl',
        Semicolon: ';',
        Quote: "'",
        Backquote: '`',
        Backslash: '\\',
        Comma: ',',
        Period: '.',
        Slash: '/',
        NumpadMultiply: 'Numpad *',
        CapsLock: 'Caps Lock',
        ScrollLock: 'Scroll Lock',
        Numpad7: 'Numpad 7',
        Numpad8: 'Numpad 8',
        Numpad9: 'Numpad 9',
        NumpadSubtract: 'Numpad -',
        Numpad4: 'Numpad 4',
        Numpad5: 'Numpad 5',
        Numpad6: 'Numpad 6',
        NumpadAdd: 'Numpad +',
        Numpad1: 'Numpad 1',
        Numpad2: 'Numpad 2',
        Numpad3: 'Numpad 3',
        Numpad0: 'Numpad 0',
        NumpadDecimal: 'Numpad .',
        NumpadEqual: 'Numpad =',
        NumpadEnter: 'Enter',
        NumpadDivide: 'Numpad /',
        NumLock: 'Num Lock',
        ArrowUp: 'Arrow Up',
        PageUp: 'Page Up',
        ArrowLeft: 'Arrow Left',
        ArrowRight: 'Arrow Right',
        ArrowDown: 'Arrow Down',
        PageDown: 'Page Down',
        Meta: 'Win / \u2318',
        OS: 'Win / \u2318'
    };

    function processKeyCode(code) {
        if (code.indexOf('Arrow') && code.indexOf('Bracket')) code = code.replace(/Key|Digit|Left|Right/, '');
        if (code in processedKeyCodes) return processedKeyCodes[code];
        return code;
    }

    var defaultKeys = {
        skins: 'K',
        names: 'N',
        mass: 'M',
        food: 'F',
        chat: 'H',
        tripleSplit: null,
        hexaSplit: null,
        minimap: null,
        scorePanel: null,
        partyPanel: null,
        leaderboard: null,
        autoDecline: null,
        autoRespawn: null,
        freeze: 'shift',
        freezeUp: null,
        freezeDown: null,
        freezeLeft: null,
        freezeRight: null,
        linesplit: null,
        leave: 'L',
        queue: null
    };

    var inputs = document.querySelectorAll('.donut-features-table input[type="text"][data-donut-feature]'), errorKeys = 'Gota.io Mr LoKo1 YT: An error occurred. We had to reset your custom keys.';
    function fillInputs(keys) {
        for (var i = 0; i < inputs.length; i++) {
            var feature = inputs[i].dataset.donutFeature, key = keys[feature];
            if (typeof key == 'undefined' && feature in defaultKeys) {
                key = keys[feature] = defaultKeys[feature];
                localStorage['donut-keys'] = JSON.stringify(keys);
            }
            if (key === null) continue;
            inputs[i].value = key;
        }
    }

    function tryLocalStorage(index, defaultObj, func, error) {
        var obj; index = 'donut-' + index;
        try {
            if (!localStorage[index]) throw null;
            obj = JSON.parse(localStorage[index]);
        } catch (e) {
            obj = JSON.parse(JSON.stringify(defaultObj));
            if (e && error) console.error(error);
            localStorage[index] = JSON.stringify(obj);
        }
        if (func) func(obj);
        return obj;
    }

    var keys = tryLocalStorage('keys', defaultKeys, fillInputs, errorKeys);

    function handleInputKeydown(e) {
        e.preventDefault();
        e.stopPropagation();
        var feature = this.dataset.donutFeature, code = processKeyCode(e.code);
        if (code && code != keys[feature] && code != 'Unidentified') {
            if (code == 'Delete') {
                this.value = '';
                keys[feature] = null;
            } else {
                for (var k in keys) {
                    if (keys[k] == code) {
                        keys[k] = null;
                        for (var l = 0; l < inputs.length; l++) {
                            if (inputs[l].dataset.donutFeature == k) {
                                inputs[l].value = '';
                                break;
                            }
                        }
                    }
                }
                this.value = keys[feature] = code;
            }
            localStorage['donut-keys'] = JSON.stringify(keys);
            this.blur();
        }
    }

    for (var j = 0; j < inputs.length; j++) {
        inputs[j].addEventListener('keydown', handleInputKeydown);
    }

    function selectOption(select) {
        var index = select.selectedIndex;
        select.selectedIndex = (index + (index == 1) + 1) % select.options.length;
        $(select).change();
    }

    function triggerCheckbox(checkbox) {
        $(checkbox).prop('checked', !$(checkbox).prop('checked')).change();
    }

    function triggerDonutCheckbox(checkbox) {
        checkbox.checked = !checkbox.checked;
        checkbox.dispatchEvent(new Event('change'));
    }

    function fadeOutMain() {
        if (gota.main.style.display == 'block') window.onkeydown({keyCode: 27, which: 27});
    }

    var alertWin = win.cloneNode();
    alertWin.style.top = '10px';
    alertWin.style.display = 'none';
    alertWin.style.lineHeight = '19px';
    alertWin.style.backgroundColor = 'rgba(23,23,23,.9)';
    alertWin.style.boxShadow = '0 2px 3px rgba(0,0,0,.25)';
    alertWin.style.transform = 'translate(-50%, 0%)';
    alertWin.style.zIndex = '3';
    document.body.appendChild(alertWin);

    var alertFadeOutTimer = 0;
    function Alert(html, timeout) {
        alertWin.innerHTML = html;
        $(alertWin).fadeIn(500);
        if (alertFadeOutTimer) clearTimeout(alertFadeOutTimer);
        alertFadeOutTimer = setTimeout(function() {
            $(alertWin).fadeOut(500);
            alertFadeOutTimer = 0;
        }, timeout);
    }

    var freezeKeys = {
        freeze: {
            id: 1,
            x: 0.5,
            y: 0.5
        },
        freezeUp: {
            id: 2,
            x: 0.5,
            y: 0
        },
        freezeDown: {
            id: 3,
            x: 0.5,
            y: 1
        },
        freezeLeft: {
            id: 4,
            x: 0,
            y: 0.5
        },
        freezeRight: {
            id: 5,
            x: 1,
            y: 0.5
        }
    };

    function findFreezeKey(code) {
        var found = Object.keys(freezeKeys).find(function(val) {
            return code == keys[val];
        });
        return found ? freezeKeys[found] : undefined;
    }

    var x = 0, y = 0, originalMousemove, freezeState = 0, freezeKeyDown = false;
    setTimeout(function delay() {
        if (window.onmousemove) {
            originalMousemove = window.onmousemove;
            window.onmousemove = function(e) {
                x = e.clientX; y = e.clientY;
                if (freezeState == 0) originalMousemove(e);
            };
        } else {
            setTimeout(delay, 200);
        }
    }, 200);

    function split(times = 1) {
        for (var i = 0; i < times; i++) {
            $(window).trigger($.Event('keydown', {keyCode: 32, which: 32}));
        }
    }

    function isModifier(e, code) {
        return (
            (code == 'Alt' && !e.ctrlKey && !e.metaKey && !e.shiftKey)
            || (code == 'Ctrl' && !e.altKey && !e.metaKey && !e.shiftKey)
            || (code == 'Win / \u2318' && !e.altKey && !e.ctrlKey && !e.shiftKey)
            || (code == 'Shift' && !e.altKey && !e.ctrlKey && !e.metaKey)
       );
    }

    window.addEventListener('keydown', function(e) {
        if (e.code == undefined) return;
        var code = processKeyCode(e.code), modifier = isModifier(e, code);
        if (modifier || !e.altKey && !e.ctrlKey && !e.metaKey) {
            if (!modifier) {
                var key = e.which || e.keyCode || 0;
                if (key == 13 && document.activeElement && document.activeElement.id == 'name-box') team2v2();
                else if (key == 27) {
                    if (!firstEscape) firstEscape = true;
                    if (alertWin.offsetHeight) $(alertWin).fadeOut(500);
                }
            }
            if ((modifier || !e.shiftKey) && document.activeElement.tagName != 'INPUT' && document.activeElement.tagName != 'TEXTAREA') {
                switch (code) {
                    case keys.skins:
                        selectOption(gota.sShowSkins);
                        break;
                    case keys.names:
                        selectOption(gota.sShowNames);
                        break;
                    case keys.mass:
                        triggerCheckbox(gota.cShowMass);
                        break;
                    case keys.food:
                        triggerCheckbox(gota.cHideFood);
                        break;
                    case keys.chat:
                        triggerCheckbox(gota.cHideChat);
                        break;
                    case keys.tripleSplit:
                        split(3);
                        break;
                    case keys.hexaSplit:
                        split(6);
                        break;
                    case keys.minimap:
                        triggerCheckbox(gota.cHideMinimap);
                        break;
                    case keys.scorePanel:
                        triggerDonutCheckbox(checkboxes.hideScorePanel);
                        break;
                    case keys.partyPanel:
                        triggerDonutCheckbox(checkboxes.hidePartyPanel);
                        break;
                    case keys.leaderboard:
                        triggerDonutCheckbox(checkboxes.hideLeaderboard);
                        break;
                    case keys.autoDecline:
                        triggerCheckbox(gota.cAutoDecline);
                        Alert('Auto Decline Party Invites: <strong>' + (gota.cAutoDecline.checked ? 'On' : 'Off') + '</strong>', 2500);
                        break;
                    case keys.autoRespawn:
                        var checkbox = done2v2 ? checkboxes.scrimmageAutoRespawn : gota.cAutoRespawn;
                        if (done2v2) triggerDonutCheckbox(checkbox);
                        else triggerCheckbox(checkbox);
                        Alert('Auto Respawn' + (done2v2 ? ' in Team Scrimmage' : '') + ': <strong>' + (checkbox.checked ? 'On' : 'Off') + '</strong>', 2500);
                        break;
                    case keys.linesplit:
                        split(3);
                        if (gota.main.style.display == 'none') {
                            gota.main.style.visibility = 'hidden';
                            gota.main.style.display = 'block';
                            setTimeout(function() {
                                gota.main.style.display = 'none';
                                gota.main.style.visibility = 'visible';
                            }, 1050);
                        }
                        break;
                    case keys.queue:
                        if (gota.scrimmageBtnLeave.style.display == 'block') $(gota.btnLeaveMatch).click();
                        else if (gota.mainScrimmage.style.display == 'block') $(gota.btnQueue).click();
                        fadeOutMain();
                        break;
                    case keys.leave:
                        if (switches.leaveExperimental || scrimmage) {
                            var hidden = gota.chatPanel.style.display == 'none';
                            if (hidden) {
                                gota.chatPanel.style.opacity = '0';
                                gota.chatPanel.style.display = 'block';
                            }
                            $(gota.chatInput).val('/leave').focus().trigger($.Event('keyup', {keyCode: 13, which: 13})).blur();
                            scrimmage = false;
                            if (hidden) {
                                gota.chatPanel.style.display = 'none';
                                gota.chatPanel.style.opacity = '1';
                            }
                            fadeOutMain();
                        }
                        break;
                    default:
                        if (originalMousemove) {
                            var freezeKey = findFreezeKey(code);
                            if (freezeKey) {
                                if (freezeState != freezeKey.id) {
                                    freezeState = freezeKey.id;
                                    freezeKeyDown = true;
                                    originalMousemove({
                                        clientX: window.innerWidth / 2,
                                        clientY: window.innerHeight / 2
                                    });
                                    setTimeout(function() {
                                        originalMousemove({
                                            clientX: window.innerWidth * freezeKey.x,
                                            clientY: window.innerHeight * freezeKey.y
                                        });
                                    }, 100);
                                } else if (options.freezeMode == 'toggle' && !freezeKeyDown) {
                                    freezeState = 0;
                                    originalMousemove({clientX: x, clientY: y});
                                }
                            }
                        }
                }
            }
        }
    });

    window.addEventListener('keyup', function(e) {
        if (e.code == undefined) return;
        var code = processKeyCode(e.code);
        if ((isModifier(e, code) || !e.altKey && !e.ctrlKey && !e.metaKey && !e.shiftKey) && document.activeElement.tagName != 'INPUT' && document.activeElement.tagName != 'TEXTAREA') {
            if (originalMousemove) {
                if (options.freezeMode == 'hold') {
                    var freezeKey = findFreezeKey(code);
                    if (freezeKey && freezeState == freezeKey.id) {
                        freezeState = 0;
                        originalMousemove({clientX: x, clientY: y});
                    }
                } else {
                    freezeKeyDown = false;
                }
            }
        }
    });

    function isMouseFrozen() {
        return gota.scoreMouse.style.display == 'block';
    }

    var originalKeydown;
    setTimeout(function delay() {
        if (window.onkeydown) {
            originalKeydown = window.onkeydown;
            window.onkeydown = function(e) {
                try {
                    if (options.freezeMode == 'toggle' || !isMouseFrozen() || e.which != JSON.parse(localStorage.keybinds).kFreezeMouse) {
                        originalKeydown(e);
                    }
                } catch (err) {
                    originalKeydown(e);
                }
            };

            window.addEventListener('keyup', function(e) {
                 if (options.freezeMode == 'hold' && isMouseFrozen() && e.which == JSON.parse(localStorage.keybinds).kFreezeMouse) {
                     originalKeydown(e);
                 }
            });
        } else {
            setTimeout(delay, 200);
        }
    }, 200);

    var defaultSwitches = {
        hideScorePanel: false,
        hidePartyPanel: false,
        hideLeaderboard: false,
        scrimmageAutoRespawn: true,
        startWithScrimmage: false,
        leaveExperimental: false
    };

    var checkboxes = {};
    for (var feature in defaultSwitches) {
        checkboxes[feature] = document.getElementById('donut-' + feature);
    }

    var errorSwitches = 'Gota.io Mr LoKo1 YT: An error occurred. We had to reset your settings.';
    function fillCheckboxes(switches) {
        for (var feature in checkboxes) {
            var Switch = switches[feature];
            if (typeof Switch == 'undefined') {
                Switch = switches[feature] = defaultSwitches[feature];
                localStorage['donut-switches'] = JSON.stringify(switches);
            }
            if (typeof Switch == 'boolean') checkboxes[feature].checked = Switch;
            else throw errorSwitches;
        }
    }

    var switches = tryLocalStorage('switches', defaultSwitches, fillCheckboxes, errorSwitches);

    var anchorObd = document.querySelector('.options-table>thead:nth-of-type(6)'), obd = anchorObd.cloneNode(true);
    obd.firstElementChild.firstElementChild.textContent = 'Options by Donut';
    anchorObd.parentNode.insertBefore(obd, anchorObd);

    var tbody = document.createElement('tbody');
    anchorObd.parentNode.insertBefore(tbody, anchorObd);

    function duplicateCheckbox(feature, text) {
        var td = document.createElement('td');
        td.colSpan = '4';
        td.style.position = 'relative';
        td.style.paddingRight = '22px';
        td.style.whiteSpace = 'normal';
        td.innerHTML = text;

        var checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.className = 'checkbox-options';
        checkbox.dataset.donutFeature = feature;
        checkbox.style.position = 'absolute';
        checkbox.style.top = '1px';
        checkbox.style.right = '1px';
        td.appendChild(checkbox);

        var tr = document.createElement('tr');
        tr.appendChild(td);
        tbody.appendChild(tr);

        checkbox.checked = switches[feature];
        return checkbox;
    }

    var duplicates = {};
    for (feature in defaultSwitches) {
        var bro = checkboxes[feature], text = bro.parentNode.innerText;
        if (feature == 'leaveExperimental') text = 'Use my <em>Leave a match</em> hotkey to leave my team in the other gamemodes';
        duplicates[feature] = duplicateCheckbox(feature, text);
    }

    function handleCheckboxChange(e) {
        var feature = this.dataset.donutFeature;
        switches[feature] = this.checked;
        localStorage['donut-switches'] = JSON.stringify(switches);
        checkboxes[feature].checked = duplicates[feature].checked = this.checked;
        switch (feature) {
            case 'hideScorePanel':
                if (this.checked) hideScorePanel();
                else {
                    gota.partyPanel.style.position = 'relative';
                    gota.partyPanel.style.top = '10px';
                    gota.scorePanel.style.opacity = '1';
                }
                break;
            case 'hidePartyPanel':
                visibility(gota.partyPanel, !this.checked);
                break;
            case 'hideLeaderboard':
                visibility(gota.leaderboardPanel, !this.checked);
                visibility(gota.extraPanel, !this.checked);
                break;
            case 'scrimmageAutoRespawn':
                if (this.checked && scrimmage) scrimRespawn();
        }
    }

    for (feature in checkboxes) {
        checkboxes[feature].addEventListener('change', handleCheckboxChange);
        duplicates[feature].addEventListener('change', handleCheckboxChange);
    }

    function hideScorePanel() {
        gota.scorePanel.style.opacity = '0';
        gota.partyPanel.style.position = 'absolute';
        gota.partyPanel.style.top = '0';
    }
    if (switches.hideScorePanel) hideScorePanel();

    function visibility(element, visible) {
        element.style.visibility = visible ? 'visible' : 'hidden';
    }
    if (switches.hideLeaderboard) {
        visibility(gota.leaderboardPanel, false);
        visibility(gota.extraPanel, false);
    }
    if (switches.hidePartyPanel) visibility(gota.partyPanel, false);

    var defaultOptions = {
        freezeMode: 'hold',
        scrimmageMode: '3'
    };

    var selects = [document.getElementById('donut-freezeMode'), document.getElementById('donut-scrimmageMode')];
    function fillSelects(options) {
        for (var i = 0; i < selects.length; i++) {
            var feature = selects[i].dataset.donutFeature, option = options[feature];
            if (typeof option == 'undefined' && feature in defaultOptions) {
                option = options[feature] = defaultOptions[feature];
                localStorage['donut-options'] = JSON.stringify(options);
            }
            var el = selects[i].querySelector('option[value="' + option + '"]');
            if (el) {
                selects[i].selectedIndex = el.index;
                selects[i].previousElementSibling.value = el.textContent;
            } else throw null;
        }
    }

    var options = tryLocalStorage('options', defaultOptions, fillSelects);

    for (var l = 0; l < selects.length; l++) {
        selects[l].addEventListener('change', function(e) {
            var feature = this.dataset.donutFeature;
            options[feature] = this.options[this.selectedIndex].value;
            localStorage['donut-options'] = JSON.stringify(options);
            this.previousElementSibling.value = this.options[this.selectedIndex].textContent;
        });
    }

    var scrimmage = false, respawnCheckInterval = 0, respawnTimer = 0;
    gota.btnQueue.addEventListener('click', function() {
        scrimmage = true;
        if (switches.scrimmageAutoRespawn) scrimRespawn();
    });

    function scrimmageFalse() {
        scrimmage = false;
        if (respawnTimer) {
            clearTimeout(respawnTimer);
            respawnTimer = respawnCheckInterval = 0;
        }
    }
    gota.btnLeaveMatch.addEventListener('click', scrimmageFalse);

    function scrimRespawn() {
        var cells = gota.playerCells, cellsNum = parseInt(cells.innerText, 10);
        if (respawnCheckInterval) clearInterval(respawnCheckInterval);
        respawnCheckInterval = setInterval(function() {
            if (switches.scrimmageAutoRespawn && scrimmage) {
                var temp = parseInt(cells.innerText, 10);
                if (temp != cellsNum) {
                    cellsNum = temp;
                    if (cellsNum === 0) {
                        if (gota.mainScrimmage.style.display == 'none') {
                            respawnTimer = setTimeout(function() {
                                if (switches.scrimmageAutoRespawn && scrimmage) {
                                    $(gota.btnPlay).click();
                                    respawnTimer = 0;
                                    scrimRespawn();
                                }
                            }, 10000);
                        }
                        clearInterval(respawnCheckInterval);
                        respawnCheckInterval = 0;
                    }
                }
            } else {
                clearInterval(respawnCheckInterval);
                respawnCheckInterval = 0;
            }
        }, 500);
    }

    var firstEscape = false;
    function startScrimmage() {
        var region = document.getElementsByClassName('server-active')[0].getAttribute('region');
            var id = region == 'eu' ? 's_Beta' : region == 'na' ? 's_Jet' : 's_Citrus';
            var interval = setInterval(function() {
                if (document.getElementsByClassName('server-selected').length) {
                    clearInterval(interval);
                    var server = document.getElementById(id);
                    if (!server) return;
                    $(server).click();
                    $(gota.btnPlay).click();
                    setTimeout(function() {
                        if (!firstEscape && !done2v2) Alert('It looks like the server is not responding.<br>You may want to press <strong>Esc</strong> to go back to the game menu.', 20000);
                    }, 5000);
                }
            }, 250);
    }
    if (switches.startWithScrimmage) startScrimmage();

    var scrimmageModeSet = false;
    function isTeamScrimmage() {
        var server = document.getElementsByClassName('server-selected')[0];
        return server && server.lastElementChild.textContent == 'Scrimmage';
    }

    var done2v2 = false, checkigTean2v2 = false;
    function team2v2() {
        if (!checkigTean2v2) {
            if (!isTeamScrimmage()) {
                scrimmageFalse();
                done2v2 = false;
            } else if (!done2v2) {
                checkigTean2v2 = true;
                var interval = setInterval(function() {
                    if (gota.mainScrimmage.style.display == 'block') {
                        if (!scrimmageModeSet) {
                            $(gota.scrimmageModeSelect).val(options.scrimmageMode).change();
                            scrimmageModeSet = true;
                        }
                        clearTimeout(timeout);
                        clearInterval(interval);
                        done2v2 = true;
                        checkigTean2v2 = false;
                        if (switches.startWithScrimmage && alertWin.offsetHeight) alertWin.style.display = 'none';
                    }
                }, 100), timeout = setTimeout(function() {
                    clearInterval(interval);
                    checkigTean2v2 = false;
                }, 25000);
            }
        }
    }

    gota.btnPlay.addEventListener('click', team2v2);
    gota.btnSpec.addEventListener('click', team2v2);
})();
